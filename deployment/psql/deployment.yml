apiVersion: apps/v1
kind: Deployment
metadata:
  name: psql
  labels:
    app: psql
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: psql
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: psql
        name: psql
    spec:
      containers:
        - name: psql
          image: postgres:latest
          env: []
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              protocol: TCP
              name: http
          resources:
            limits:
              cpu: "1"
              ephemeral-storage: 1G
              memory: 2G
            requests:
              cpu: "1"
              ephemeral-storage: 1G
              memory: 2G
          volumeMounts: []
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes: []
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/cloud-container-g2
                    operator: In
                    values:
                      - "true"
      tolerations:
        - effect: NoSchedule
          key: role
          operator: Equal
          value: cloud-container-g2

# # Kubernetes API version
# apiVersion: apps/v1
# # Deployment object
# kind: Deployment
# metadata:
#   # The name of the Deployment
#   name: postgresdb
# spec:
#   # Replicas for this Deployment
#   # replicas: 1
#   selector:
#     # labels the pods
#     matchLabels:
#       app: postgresdb
#   template:
#     metadata:
#       labels:
#         # The label the pods created from the pod template should have
#         app: postgresdb
#     spec:
#       containers:
#         # The container name to execute pods
#         - name: postgresdb
#           # pull postgresimage from docker hub
#           image: postgres:latest
#           # ports:
#           #   # Assign ports to expose container
#           #   - containerPort: 5432
#           # envFrom:
#           #   # Load the environment variables/PostgresSQL credentials
#           #   - secretRef:
#           #       # This should be the ConfigMap name created ealier
#           #       name: common-secret
#           #   - configMapRef:
#           #       name: common-config
#           # volumeMounts:
#           #   # The volume mounts for the container
#           #   - mountPath: /var/lib/postgresql/data
#           #     name: db-data
#           # resources:
#           #   limits:
#           #     cpu: 200m
#           #     # ephemeral-storage: 1G
#           #     memory: 400M
#           #   requests:
#           #     cpu: 200m
#           #     # ephemeral-storage: 1G
#           #     memory: 400M
#       # Volumes attached to the pod
#       # volumes:
#       #   - name: db-data
#       #     persistentVolumeClaim:
#       #       # reference the PersistentVolumeClaim
#       #       claimName: db-persistent-volume-claim
